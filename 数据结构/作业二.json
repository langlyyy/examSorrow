[
    {
        "index": "1",
        "title": "数组的存储方式有以下两种（）",
        "listData": [
            {
                "index": "A",
                "text": "顺序表和链表"
            },
            {
                "index": "B",
                "text": "堆栈和队列"
            },
            {
                "index": "C",
                "text": "行优先和列优先"
            },
            {
                "index": "D",
                "text": "对称矩阵和三角矩阵"
            }
        ],
        "answer": [
            "C"
        ]
    },
    {
        "index": "2",
        "title": "广义表的表头是指（）",
        "listData": [
            {
                "index": "A",
                "text": "表中第一个元素"
            },
            {
                "index": "B",
                "text": "表中最后一个元素"
            },
            {
                "index": "C",
                "text": "除表中第一个元素以外，其余元素组成的子表"
            },
            {
                "index": "D",
                "text": "除表中最后一个元素以外，其余元素组成的子表"
            }
        ],
        "answer": [
            "A"
        ]
    },
    {
        "index": "3",
        "title": "广义表的表尾是指（）",
        "listData": [
            {
                "index": "A",
                "text": "表中第一个元素"
            },
            {
                "index": "B",
                "text": "表中最后一个元素"
            },
            {
                "index": "C",
                "text": "除表中第一个元素以外，其余元素组成的子表"
            },
            {
                "index": "D",
                "text": "除表中最后一个元素以外，其余元素组成的子表"
            }
        ],
        "answer": [
            "C"
        ]
    },
    {
        "index": "4",
        "title": "已知对称矩阵有4行4列，必定与元素a23相等的元素是（）",
        "listData": [
            {
                "index": "A",
                "text": "a32"
            },
            {
                "index": "B",
                "text": "a33"
            },
            {
                "index": "C",
                "text": "a00"
            },
            {
                "index": "D",
                "text": "a22"
            }
        ],
        "answer": [
            "A"
        ]
    },
    {
        "index": "5",
        "title": "已知主串为abcbcaddabc，模式串为cad，假设串位置从1开始，则串匹配位置是（）",
        "listData": [
            {
                "index": "A",
                "text": "3"
            },
            {
                "index": "B",
                "text": "5"
            },
            {
                "index": "C",
                "text": "7"
            },
            {
                "index": "D",
                "text": "不存在"
            }
        ],
        "answer": [
            "B"
        ]
    },
    {
        "index": "6",
        "title": "以下描述哪一个是正确的（）",
        "listData": [
            {
                "index": "A",
                "text": "串是字符有限序列"
            },
            {
                "index": "B",
                "text": "串是整数、浮点数、字符等多种数据的有限序列"
            },
            {
                "index": "C",
                "text": "只包含空格的串称为空串"
            },
            {
                "index": "D",
                "text": "串只能使用顺序表存储"
            }
        ],
        "answer": [
            "A"
        ]
    },
    {
        "index": "7",
        "title": "串的长度是指（）",
        "listData": [
            {
                "index": "A",
                "text": "串中包含不同字母的个数"
            },
            {
                "index": "B",
                "text": "串中所含字符的个数"
            },
            {
                "index": "C",
                "text": "串中包含不同字符的个数"
            },
            {
                "index": "D",
                "text": "串中包含非空格的字符的个数"
            }
        ],
        "answer": [
            "B"
        ]
    },
    {
        "index": "8",
        "title": "二叉树的深度为8，则该二叉树最多有（）个结点",
        "listData": [
            {
                "index": "A",
                "text": "15"
            },
            {
                "index": "B",
                "text": "16"
            },
            {
                "index": "C",
                "text": "255"
            },
            {
                "index": "D",
                "text": "256"
            }
        ],
        "answer": [
            "C"
        ]
    },
    {
        "index": "9",
        "title": "为了避免重复遍历在二叉树中保存前驱后继信息，这种二叉树称为（）",
        "listData": [
            {
                "index": "A",
                "text": "遍历二叉树"
            },
            {
                "index": "B",
                "text": "完全二叉树"
            },
            {
                "index": "C",
                "text": "满二叉树"
            },
            {
                "index": "D",
                "text": "线索二叉树"
            }
        ],
        "answer": [
            "D"
        ]
    },
    {
        "index": "10",
        "title": "已知一棵完全二叉树有20个结点，从1开始按层次遍历编号，则结点8的孩子编号是（）",
        "listData": [
            {
                "index": "A",
                "text": "左孩子编号4，右孩子编号5"
            },
            {
                "index": "B",
                "text": "左孩子编号9，右孩子编号10"
            },
            {
                "index": "C",
                "text": "左孩子编号16，右孩子编号17"
            },
            {
                "index": "D",
                "text": "左孩子编号20，右孩子不存在"
            }
        ],
        "answer": [
            "C"
        ]
    },
    {
        "index": "11",
        "title": "以下算法中，用于求解两点最短路径的算法是（）",
        "listData": [
            {
                "index": "A",
                "text": "克鲁斯卡尔"
            },
            {
                "index": "B",
                "text": "迪杰斯特拉"
            },
            {
                "index": "C",
                "text": "普里姆"
            },
            {
                "index": "D",
                "text": "深度优先搜索"
            }
        ],
        "answer": [
            "B"
        ]
    },
    {
        "index": "12",
        "title": "以下描述错误的是（）",
        "listData": [
            {
                "index": "A",
                "text": "第一个顶点和最后一个顶点相同的路径称为回路"
            },
            {
                "index": "B",
                "text": "所有顶点不重复出现的路径称为拓扑路径"
            },
            {
                "index": "C",
                "text": "任意两个顶点都存在路径的无向图称为连通图"
            },
            {
                "index": "D",
                "text": "强连通图只包含一个强连通分量"
            }
        ],
        "answer": [
            "B"
        ]
    },
    {
        "index": "13",
        "title": "已知有向图G=(V,E)，其中V={1,2,3,4,5}， E={<2,1>,<3,2>,<1,3>,<5,3>,<1,5>,<4,3>}，则拓扑序列的起点是（）",
        "listData": [
            {
                "index": "A",
                "text": "2"
            },
            {
                "index": "B",
                "text": "4"
            },
            {
                "index": "C",
                "text": "3"
            },
            {
                "index": "D",
                "text": "1"
            }
        ],
        "answer": [
            "B"
        ]
    },
    {
        "index": "14",
        "title": "以下属于静态查找的算法是（）",
        "listData": [
            {
                "index": "A",
                "text": "二叉排序树"
            },
            {
                "index": "B",
                "text": "折半查找"
            },
            {
                "index": "C",
                "text": "B+树"
            },
            {
                "index": "D",
                "text": "键树"
            }
        ],
        "answer": [
            "B"
        ]
    },
    {
        "index": "15",
        "title": "在哈希查找中，不同关键字却有着相同的哈希地址，这种现象称为（）",
        "listData": [
            {
                "index": "A",
                "text": "哈希地址"
            },
            {
                "index": "B",
                "text": "散列地址"
            },
            {
                "index": "C",
                "text": "哈希冲突"
            },
            {
                "index": "D",
                "text": "地址探测"
            }
        ],
        "answer": [
            "C"
        ]
    },
    {
        "index": "16",
        "title": "以下关于平衡二叉树描述错误的是（）",
        "listData": [
            {
                "index": "A",
                "text": "平衡二叉树不是二叉排序树"
            },
            {
                "index": "B",
                "text": "平衡二叉树属于动态查找"
            },
            {
                "index": "C",
                "text": "平衡因子的绝对值不能超过1"
            },
            {
                "index": "D",
                "text": "当出现不平衡情况时需要做平衡化处理"
            }
        ],
        "answer": [
            "A"
        ]
    },
    {
        "index": "17",
        "title": "已知序列19,01,23,14,55,68,11,82,36，哈希函数H(key)=key MOD 11，哈希冲突处理采用线性探测再散列，哈希表长11，地址从0开始，则68在哈希表的位置是（）",
        "listData": [
            {
                "index": "A",
                "text": "1"
            },
            {
                "index": "B",
                "text": "2"
            },
            {
                "index": "C",
                "text": "3"
            },
            {
                "index": "D",
                "text": "4"
            }
        ],
        "answer": [
            "D"
        ]
    },
    {
        "index": "18",
        "title": "以下排序算法时间复杂度最小的是（）",
        "listData": [
            {
                "index": "A",
                "text": "冒泡排序"
            },
            {
                "index": "B",
                "text": "直接插入排序"
            },
            {
                "index": "C",
                "text": "简单选择排序"
            },
            {
                "index": "D",
                "text": "堆排序"
            }
        ],
        "answer": [
            "D"
        ]
    },
    {
        "index": "19",
        "title": "时间复杂度小于n平方的排序算法是（）",
        "listData": [
            {
                "index": "A",
                "text": "冒泡排序"
            },
            {
                "index": "B",
                "text": "快速排序"
            },
            {
                "index": "C",
                "text": "简单选择排序"
            },
            {
                "index": "D",
                "text": "直接插入排序"
            }
        ],
        "answer": [
            "B"
        ]
    },
    {
        "index": "20",
        "title": "已知数列为125、45、88、72、165、33、 28、64，采用起泡排序算法递增排序，第一趟排序共发生（）次交换",
        "listData": [
            {
                "index": "A",
                "text": "8"
            },
            {
                "index": "B",
                "text": "7"
            },
            {
                "index": "C",
                "text": "6"
            },
            {
                "index": "D",
                "text": "5"
            }
        ],
        "answer": [
            "C"
        ]
    },
    {
        "index": "21",
        "title": "序列21 25 49 25* 16 08，采用快速排序，枢轴为序列首元素，则第一趟排序（）",
        "listData": [
            {
                "index": "A",
                "text": "08 16 21 25 25* 49"
            },
            {
                "index": "B",
                "text": "08 16 21 25* 25 49"
            },
            {
                "index": "C",
                "text": "16 08 21 25* 49 25"
            },
            {
                "index": "D",
                "text": "08 16 21 25* 49 25"
            }
        ],
        "answer": [
            "D"
        ]
    },
    {
        "index": "22",
        "title": "以下结构不是存储结构的（）",
        "listData": [
            {
                "index": "A",
                "text": "邻接表"
            },
            {
                "index": "B",
                "text": "逆邻接表"
            },
            {
                "index": "C",
                "text": "邻接矩阵"
            },
            {
                "index": "D",
                "text": "有向无环图"
            }
        ],
        "answer": [
            "D"
        ]
    },
    {
        "index": "23",
        "title": "以下算法中，用于求解两点最短路径的算法是（）",
        "listData": [
            {
                "index": "A",
                "text": "克鲁斯卡尔"
            },
            {
                "index": "B",
                "text": "迪杰斯特拉"
            },
            {
                "index": "C",
                "text": "普里姆"
            },
            {
                "index": "D",
                "text": "深度优先搜索"
            }
        ],
        "answer": [
            "B"
        ]
    },
    {
        "index": "24",
        "title": "以下描述错误的是（）",
        "listData": [
            {
                "index": "A",
                "text": "第一个顶点和最后一个顶点相同的路径称为回路"
            },
            {
                "index": "B",
                "text": "所有顶点不重复出现的路径称为拓扑路径"
            },
            {
                "index": "C",
                "text": "任意两个顶点都存在路径的无向图称为连通图"
            },
            {
                "index": "D",
                "text": "强连通图只包含一个强连通分量"
            }
        ],
        "answer": [
            "B"
        ]
    },
    {
        "index": "25",
        "title": "已知有向图G=(V,E)，其中V={1,2,3,4,5}， E={<2,1>,<3,2>,<1,3>,<5,3>,<1,5>,<4,3>}，则拓扑序列的起点是（）",
        "listData": [
            {
                "index": "A",
                "text": "2"
            },
            {
                "index": "B",
                "text": "4"
            },
            {
                "index": "C",
                "text": "3"
            },
            {
                "index": "D",
                "text": "1"
            }
        ],
        "answer": [
            "B"
        ]
    }
]