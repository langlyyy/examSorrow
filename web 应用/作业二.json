[
    {
        "index": "1.",
        "title": "使用CSS设置格式时，p em{color:blue }表示（    ）。",
        "listData": [
            {
                "index": "A.",
                "text": "p元素内的em元素为蓝色"
            },
            {
                "index": "B.",
                "text": "p元素内的元素为蓝色"
            },
            {
                "index": "C.",
                "text": "em元素内的p元素为蓝色"
            },
            {
                "index": "D.",
                "text": "em元素内的元素为蓝色"
            }
        ],
        "answer": "A"
    },
    {
        "index": "2.",
        "title": "在HTML中，下面（     ）是已被访问过呈红色文字的样式。",
        "listData": [
            {
                "index": "A.",
                "text": "a:link{color:red;}"
            },
            {
                "index": "B.",
                "text": "a:hover{color:red;}"
            },
            {
                "index": "C.",
                "text": "a:visited{color:red;}"
            },
            {
                "index": "D.",
                "text": "a:active{color:red;}"
            }
        ],
        "answer": "C"
    },
    {
        "index": "3.",
        "title": "在同一个样式表中使用全部四个链接伪类，以下列哪种顺序出现是正确的？（    ）。",
        "listData": [
            {
                "index": "A.",
                "text": "a:link，a:visited，a:hover，a:active"
            },
            {
                "index": "B.",
                "text": "a:hover，a:link，a:visited，a:active"
            },
            {
                "index": "C.",
                "text": "a:link，a:hover，a:visited，a:active"
            },
            {
                "index": "D.",
                "text": "a:active，a:link，a:hover ，a:visited"
            }
        ],
        "answer": "A"
    },
    {
        "index": "4.",
        "title": "若只对有href属性的锚（a 元素）应用样式，以下表示正确的是（    ）",
        "listData": [
            {
                "index": "A.",
                "text": "a:href"
            },
            {
                "index": "B.",
                "text": "a.href"
            },
            {
                "index": "C.",
                "text": "[href]"
            },
            {
                "index": "D.",
                "text": "a[href]"
            }
        ],
        "answer": "D"
    },
    {
        "index": "5.",
        "title": "以下选择器中，优先级最高的是（   ）",
        "listData": [
            {
                "index": "A.",
                "text": "元素选择器"
            },
            {
                "index": "B.",
                "text": "ID选择器"
            },
            {
                "index": "C.",
                "text": "类选择器"
            },
            {
                "index": "D.",
                "text": "后代选择器"
            }
        ],
        "answer": "D"
    },
    {
        "index": "6.",
        "title": "下列哪个选项是把列表中的最后一个“li”的背景设置为蓝色（    ）",
        "listData": [
            {
                "index": "A.",
                "text": "ul>li{background:blue;}"
            },
            {
                "index": "B.",
                "text": "ul>li:last-child{background:blue;}"
            },
            {
                "index": "C.",
                "text": "ul>li:first-child{background:blue;}"
            },
            {
                "index": "D.",
                "text": "ul>li:only-child{background:blue;}"
            }
        ],
        "answer": "B"
    },
    {
        "index": "7.",
        "title": "下列哪些属性不可以被继承（    ）",
        "listData": [
            {
                "index": "A.",
                "text": "border"
            },
            {
                "index": "B.",
                "text": "font-style"
            },
            {
                "index": "C.",
                "text": "text-align"
            },
            {
                "index": "D.",
                "text": "list-style"
            }
        ],
        "answer": "A"
    },
    {
        "index": "8.",
        "title": "给边框加1px蓝色实线的是（    ）。",
        "listData": [
            {
                "index": "A.",
                "text": "border:1px dashed blue"
            },
            {
                "index": "B.",
                "text": "padding:1px solid blue"
            },
            {
                "index": "C.",
                "text": "border: 1px solid blue"
            },
            {
                "index": "D.",
                "text": "padding: 1px dashed blue"
            }
        ],
        "answer": "C"
    },
    {
        "index": "9.",
        "title": "在CSS中，下面不属于盒子模型属性的是（   ）",
        "listData": [
            {
                "index": "A.",
                "text": "font"
            },
            {
                "index": "B.",
                "text": "margin"
            },
            {
                "index": "C.",
                "text": "padding"
            },
            {
                "index": "D.",
                "text": "border"
            }
        ],
        "answer": "A"
    },
    {
        "index": "10.",
        "title": "以下哪种元素定位方式将会脱离标准文档流（    ）。",
        "listData": [
            {
                "index": "A.",
                "text": "绝对定位"
            },
            {
                "index": "B.",
                "text": "相对定位"
            },
            {
                "index": "C.",
                "text": "浮动定位"
            },
            {
                "index": "D.",
                "text": "静态定位"
            }
        ],
        "answer": "A"
    },
    {
        "index": "11.",
        "title": "以下选项中不能实现清除浮动的是（   ）。",
        "listData": [
            {
                "index": "A.",
                "text": "overflow属性"
            },
            {
                "index": "B.",
                "text": "hover伪类选择器"
            },
            {
                "index": "C.",
                "text": "clear属性"
            },
            {
                "index": "D.",
                "text": "以上说法都不对"
            }
        ],
        "answer": "B"
    },
    {
        "index": "12.",
        "title": "下列不属于浮动元素特征的是（     ）。",
        "listData": [
            {
                "index": "A.",
                "text": "浮动元素会被自动地设置为块状元素显示"
            },
            {
                "index": "B.",
                "text": "浮动元素在垂直方向上它与未被定义为浮动时的位置一样"
            },
            {
                "index": "C.",
                "text": "浮动元素在水平方向上，它将最大程度地靠近其父级元素边缘"
            },
            {
                "index": "D.",
                "text": "浮动元素有可能会脱离包含元素之外"
            }
        ],
        "answer": "D"
    },
    {
        "index": "13.",
        "title": "如果想对一个div块元素的宽度属性设置一个2s的过渡效果，相应的CSS属性应该如何写（    ）。",
        "listData": [
            {
                "index": "A.",
                "text": "animation: width 2s;"
            },
            {
                "index": "B.",
                "text": "transition: width 2s;"
            },
            {
                "index": "C.",
                "text": "transition: 2s width;"
            },
            {
                "index": "D.",
                "text": "transition: div width 2s;"
            }
        ],
        "answer": "B"
    },
    {
        "index": "14.",
        "title": "如果希望一个以慢速开始，然后加快，最后慢慢结束的过渡效果，应该使用什么过渡模式？（    ）。",
        "listData": [
            {
                "index": "A.",
                "text": "ease"
            },
            {
                "index": "B.",
                "text": "ease-out"
            },
            {
                "index": "C.",
                "text": "ease-in"
            },
            {
                "index": "D.",
                "text": "ease-in-out"
            }
        ],
        "answer": "A"
    },
    {
        "index": "15.",
        "title": "对3D物体进行操作时，有x，y，z三个轴的方向，Y轴的正方向是什么方向？（    ）。",
        "listData": [
            {
                "index": "A.",
                "text": "竖直向上"
            },
            {
                "index": "B.",
                "text": "竖直向下"
            },
            {
                "index": "C.",
                "text": "向屏幕外"
            },
            {
                "index": "D.",
                "text": "向屏幕内"
            }
        ],
        "answer": "B"
    },
    {
        "index": "16.",
        "title": "下列那个属性可以为div元素添加阴影边框（   ）。",
        "listData": [
            {
                "index": "A.",
                "text": "border-radius"
            },
            {
                "index": "B.",
                "text": "box-shadow"
            },
            {
                "index": "C.",
                "text": "border-image"
            },
            {
                "index": "D.",
                "text": "border-style"
            }
        ],
        "answer": "B"
    },
    {
        "index": "17.",
        "title": "下列哪个选项表示用省略标记（...）标示对象内文本的溢出（    ）。",
        "listData": [
            {
                "index": "A.",
                "text": "text-overflow: clip"
            },
            {
                "index": "B.",
                "text": "text-overflow: ellipsis"
            },
            {
                "index": "C.",
                "text": "text-overflow:hidden"
            },
            {
                "index": "D.",
                "text": "text-overflow:overflow"
            }
        ],
        "answer": "B"
    },
    {
        "index": "18.",
        "title": "正确给文本添加阴影的是（ ）。",
        "listData": [
            {
                "index": "A.",
                "text": "box-shadow"
            },
            {
                "index": "B.",
                "text": "border"
            },
            {
                "index": "C.",
                "text": "margin"
            },
            {
                "index": "D.",
                "text": "text-shadow"
            }
        ],
        "answer": "D"
    },
    {
        "index": "19.",
        "title": "以下关于Flex说法错误的是（    ）。",
        "listData": [
            {
                "index": "A.",
                "text": "设为Flex布局以后，子元素的float、clear和vertical-align属性不会改变"
            },
            {
                "index": "B.",
                "text": "所有子元素自动成为容器成员，称为Flex项目"
            },
            {
                "index": "C.",
                "text": "子元素可以在各个方向上进行布局，并且能以弹性尺寸来适应显示空间"
            },
            {
                "index": "D.",
                "text": "Flex是Flexible Box的缩写，意为”弹性布局”，用来为盒状模型提供最大的灵活性"
            }
        ],
        "answer": "A"
    },
    {
        "index": "20.",
        "title": "使用CSS的flexbox布局，不能实现以下哪一个效果(     )。",
        "listData": [
            {
                "index": "A.",
                "text": "实现三列布局，并且随容器宽度等宽弹性伸缩"
            },
            {
                "index": "B.",
                "text": "实现多列布局，且每列的高度按内容最高的一列等高"
            },
            {
                "index": "C.",
                "text": "实现三列布局，且左列宽度像素数确定，中、右列随容器宽度等宽弹性伸缩"
            },
            {
                "index": "D.",
                "text": "实现多个宽高不等的元素，且实现无缝瀑布流布局"
            }
        ],
        "answer": "D"
    }
]