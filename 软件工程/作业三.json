[
    {
        "index": "1",
        "title": "OOA阶段建立的3个模型中，核心的模型是（）模型。",
        "listData": [
            {
                "index": "A",
                "text": "功能"
            },
            {
                "index": "B",
                "text": "动态"
            },
            {
                "index": "C",
                "text": "对象"
            },
            {
                "index": "D",
                "text": "分析"
            }
        ],
        "answer": [
            "C"
        ]
    },
    {
        "index": "2",
        "title": "在建立动态模型的过程中，脚本是指系统在某一执行期间内出现的一系列（）。",
        "listData": [
            {
                "index": "A",
                "text": "事件"
            },
            {
                "index": "B",
                "text": "消息"
            },
            {
                "index": "C",
                "text": "动作"
            },
            {
                "index": "D",
                "text": "对象"
            }
        ],
        "answer": [
            "A"
        ]
    },
    {
        "index": "3",
        "title": "面向对象分析建模时，对象模型的（）表征了问题域的复杂性。",
        "listData": [
            {
                "index": "A",
                "text": "主题层"
            },
            {
                "index": "B",
                "text": "类与对象层"
            },
            {
                "index": "C",
                "text": "结构层"
            },
            {
                "index": "D",
                "text": "服务层"
            }
        ],
        "answer": [
            "C"
        ]
    },
    {
        "index": "4",
        "title": "下面哪一项不是面向对象设计的准则？（）",
        "listData": [
            {
                "index": "A",
                "text": "模块化"
            },
            {
                "index": "B",
                "text": "信息隐藏"
            },
            {
                "index": "C",
                "text": "低耦合"
            },
            {
                "index": "D",
                "text": "弱内聚"
            }
        ],
        "answer": [
            "D"
        ]
    },
    {
        "index": "5",
        "title": "“客户—供应商”交互关系中，任何交互行为都是由（）驱动的。",
        "listData": [
            {
                "index": "A",
                "text": "作为客户的子系统"
            },
            {
                "index": "B",
                "text": "作为供应商的子系统"
            },
            {
                "index": "C",
                "text": "第三方子系统"
            },
            {
                "index": "D",
                "text": "以上均不正确"
            }
        ],
        "answer": [
            "A"
        ]
    },
    {
        "index": "6",
        "title": "一张状态图描绘了一个对象的生命周期，图中的（）是执行对象服务的结果。",
        "listData": [
            {
                "index": "A",
                "text": "接收事件"
            },
            {
                "index": "B",
                "text": "进入状态"
            },
            {
                "index": "C",
                "text": "退出状态"
            },
            {
                "index": "D",
                "text": "状态转换"
            }
        ],
        "answer": [
            "D"
        ]
    },
    {
        "index": "7",
        "title": "面向对象程序中，最小的可测试单元是封装起来的（）。",
        "listData": [
            {
                "index": "A",
                "text": "类和对象"
            },
            {
                "index": "B",
                "text": "方法"
            },
            {
                "index": "C",
                "text": "模块"
            },
            {
                "index": "D",
                "text": "JavaBean"
            }
        ],
        "answer": [
            "A"
        ]
    },
    {
        "index": "8",
        "title": "下列哪种程序设计风格有利于提高软件的可扩充性？（）",
        "listData": [
            {
                "index": "A",
                "text": "用一个方法遍历多条关联链"
            },
            {
                "index": "B",
                "text": "封装实现策略"
            },
            {
                "index": "C",
                "text": "将所有重复的代码抽取到基类中"
            },
            {
                "index": "D",
                "text": "大量使用多分支语句"
            }
        ],
        "answer": [
            "B"
        ]
    },
    {
        "index": "9",
        "title": "用C++/Java语言编程时，对象之间的交互一般通过（）来实现。",
        "listData": [
            {
                "index": "A",
                "text": "继承"
            },
            {
                "index": "B",
                "text": "实例方法调用"
            },
            {
                "index": "C",
                "text": "方法重载"
            },
            {
                "index": "D",
                "text": "运算符重载"
            }
        ],
        "answer": [
            "D"
        ]
    },
    {
        "index": "10",
        "title": "面向对象测试关注于设计适当的（）以检查类的状态。",
        "listData": [
            {
                "index": "A",
                "text": "输入数据"
            },
            {
                "index": "B",
                "text": "输出数据"
            },
            {
                "index": "C",
                "text": "算法"
            },
            {
                "index": "D",
                "text": "操作序列"
            }
        ],
        "answer": [
            "D"
        ]
    },
    {
        "index": "1",
        "title": "组成复杂问题（大型系统）对象模型的5个层次包括（）。",
        "listData": [
            {
                "index": "A",
                "text": "结构层"
            },
            {
                "index": "B",
                "text": "说明层"
            },
            {
                "index": "C",
                "text": "服务层"
            },
            {
                "index": "D",
                "text": "主题层"
            }
        ],
        "answer": [
            "A",
            "C",
            "D"
        ]
    },
    {
        "index": "2",
        "title": "需求陈述的内容包括（）。",
        "listData": [
            {
                "index": "A",
                "text": "问题范围"
            },
            {
                "index": "B",
                "text": "功能需求"
            },
            {
                "index": "C",
                "text": "性能需求"
            },
            {
                "index": "D",
                "text": "应用环境及假设条件"
            }
        ],
        "answer": [
            "A",
            "B",
            "C",
            "D"
        ]
    },
    {
        "index": "3",
        "title": "以下哪些工具可用于描述面向对象动态模型？（）",
        "listData": [
            {
                "index": "A",
                "text": "UML类图"
            },
            {
                "index": "B",
                "text": "UML状态图"
            },
            {
                "index": "C",
                "text": "UML顺序图"
            },
            {
                "index": "D",
                "text": "UML活动图"
            }
        ],
        "answer": [
            "B",
            "C",
            "D"
        ]
    },
    {
        "index": "4",
        "title": "下面哪些是在面向对象设计过程中，可能对OOA产出的问题域模型作的补充或修改？（）",
        "listData": [
            {
                "index": "A",
                "text": "调整需求"
            },
            {
                "index": "B",
                "text": "重用已有的类"
            },
            {
                "index": "C",
                "text": "把问题域类组合在一起"
            },
            {
                "index": "D",
                "text": "采用更高效的实现算法"
            }
        ],
        "answer": [
            "A",
            "B",
            "C"
        ]
    },
    {
        "index": "5",
        "title": "需要综合考虑（），才能正确确定类中应有的服务。",
        "listData": [
            {
                "index": "A",
                "text": "对象模型"
            },
            {
                "index": "B",
                "text": "动态模型"
            },
            {
                "index": "C",
                "text": "功能模型"
            },
            {
                "index": "D",
                "text": "数据模型"
            }
        ],
        "answer": [
            "A",
            "B",
            "C"
        ]
    },
    {
        "index": "6",
        "title": "以下哪些属于设计人—机交互界面的准则？（）",
        "listData": [
            {
                "index": "A",
                "text": "及时提供反馈信息"
            },
            {
                "index": "B",
                "text": "提供撤销命令"
            },
            {
                "index": "C",
                "text": "配色鲜艳醒目"
            },
            {
                "index": "D",
                "text": "减少操作步骤"
            }
        ],
        "answer": [
            "A",
            "B",
            "D"
        ]
    },
    {
        "index": "7",
        "title": "常用的面向对象集成测试策略包括（）。",
        "listData": [
            {
                "index": "A",
                "text": "自顶向下测试"
            },
            {
                "index": "B",
                "text": "基于线程的测试"
            },
            {
                "index": "C",
                "text": "基于使用的测试"
            },
            {
                "index": "D",
                "text": "集群测试"
            }
        ],
        "answer": [
            "B",
            "C",
            "D"
        ]
    },
    {
        "index": "8",
        "title": "面向对象编程时，采用的程序设计语言的特点和程序设计风格将对程序的（）产生深远的影响。",
        "listData": [
            {
                "index": "A",
                "text": "可维护性"
            },
            {
                "index": "B",
                "text": "可靠性"
            },
            {
                "index": "C",
                "text": "可重用性"
            },
            {
                "index": "D",
                "text": "规模"
            }
        ],
        "answer": [
            "A",
            "B",
            "C"
        ]
    },
    {
        "index": "9",
        "title": "面向对象语言中常用的对象内存管理方法包括（）。",
        "listData": [
            {
                "index": "A",
                "text": "“垃圾收集”机制"
            },
            {
                "index": "B",
                "text": "程序员自行编写释放内存的代码"
            },
            {
                "index": "C",
                "text": "内存换入/换出"
            },
            {
                "index": "D",
                "text": "虚拟内存"
            }
        ],
        "answer": [
            "A",
            "B"
        ]
    },
    {
        "index": "10",
        "title": "对象持久化机制可支持（）。",
        "listData": [
            {
                "index": "A",
                "text": "实现在不同程序之间传递数据"
            },
            {
                "index": "B",
                "text": "恢复被中断的程序的运行"
            },
            {
                "index": "C",
                "text": "内存的分配与释放"
            },
            {
                "index": "D",
                "text": "减少程序的存储空间开销"
            }
        ],
        "answer": [
            "A",
            "B"
        ]
    },
    {
        "index": "1",
        "title": "类图用来表示系统中类和类与类之间的关系，它是对系统动态结构的描述。（）",
        "listData": [
            {
                "index": "A",
                "text": "正确"
            },
            {
                "index": "B",
                "text": "错误"
            }
        ],
        "answer": [
            "B"
        ]
    },
    {
        "index": "2",
        "title": "面向对象方法是以类作为最基本的元素，类是分析问题和解决问题的核心。（）",
        "listData": [
            {
                "index": "A",
                "text": "正确"
            },
            {
                "index": "B",
                "text": "错误"
            }
        ],
        "answer": [
            "B"
        ]
    },
    {
        "index": "3",
        "title": "动态模型和功能模型都包含了对象模型中的操作（即服务或方法）。（）",
        "listData": [
            {
                "index": "A",
                "text": "正确"
            },
            {
                "index": "B",
                "text": "错误"
            }
        ],
        "answer": [
            "A"
        ]
    },
    {
        "index": "4",
        "title": "关联既可以描述问题域的静态结构，又可以描述瞬时事件。（）",
        "listData": [
            {
                "index": "A",
                "text": "正确"
            },
            {
                "index": "B",
                "text": "错误"
            }
        ],
        "answer": [
            "B"
        ]
    },
    {
        "index": "5",
        "title": "从面向对象分析到面向对象设计，是一个逐渐扩充模型的过程。（）",
        "listData": [
            {
                "index": "A",
                "text": "正确"
            },
            {
                "index": "B",
                "text": "错误"
            }
        ],
        "answer": [
            "A"
        ]
    },
    {
        "index": "6",
        "title": "面向对象方法中，类结构分离了接口与实现，从而支持了信息隐藏。（）",
        "listData": [
            {
                "index": "A",
                "text": "正确"
            },
            {
                "index": "B",
                "text": "错误"
            }
        ],
        "answer": [
            "A"
        ]
    },
    {
        "index": "7",
        "title": "持久性机制应该在设计阶段进行考虑。（）",
        "listData": [
            {
                "index": "A",
                "text": "正确"
            },
            {
                "index": "B",
                "text": "错误"
            }
        ],
        "answer": [
            "A"
        ]
    },
    {
        "index": "8",
        "title": "由于构成类的成分彼此间存在直接或间接的交互，传统的渐增式集成方法通常是不可能的。（）",
        "listData": [
            {
                "index": "A",
                "text": "正确"
            },
            {
                "index": "B",
                "text": "错误"
            }
        ],
        "answer": [
            "A"
        ]
    },
    {
        "index": "9",
        "title": "面向对象设计的结果只能采用面向对象语言来实现。（）",
        "listData": [
            {
                "index": "A",
                "text": "正确"
            },
            {
                "index": "B",
                "text": "错误"
            }
        ],
        "answer": [
            "B"
        ]
    },
    {
        "index": "10",
        "title": "所谓参数化类，就是一个类的构造方法具有参数。（）",
        "listData": [
            {
                "index": "A",
                "text": "正确"
            },
            {
                "index": "B",
                "text": "错误"
            }
        ],
        "answer": [
            "B"
        ]
    }
]